/****-----
4_04  (Perfiles de Carga)
*** Archivo 'reporte_consumos.py', la función retorna la lista de data necesaria para gestionar los reportes
*** Archivo 'main.py', el archivo encargado de la interfaz recibe los datos del archivo anterior desde la función generar_reportes(), todos estos datos se guardan en la lista 'datos_obtenidos', con una función todos estos datos se insertan en el treeview respectivo para que aparezcan en la interfaz dentro de la pestaña de reportes.


3_04
- Se debe poder seleccionar más de un medidor para obtener la información histórica de dicho medidor en la pestaña de reportes con los campos requeridos siguiendo la plantilla del wireframe...ok

1_04
- El aplicativo carga los id de cada medidor (en la ventana principal), debe mostrar el resto de campos...ok

27_03
- El reporte y los cálculos a mostra para cada medidor serán proporcionados desde el archivo 'grafico_suma_consumos', que de momento proporciona uno de los gráficos
con la data obtenida para presentar el reporte...ok

23_03
Se agregó un db.rollback() para cuando se reconozca un error en el proceso, lo que hace este rollback es deshacer lo instanciado para la base de datos en un archivo,
osea con las líneas...ok